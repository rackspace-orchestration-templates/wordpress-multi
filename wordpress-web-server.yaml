heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running a WordPress.

parameters:

  # Server settings

  agent_config:
    type: string
    description: User data for installing and configuring monitoring agent
    default: ""

  wp_web_server_hostnames:
    description: WordPress Web Server Name
    type: string
    default: WordPress-Web
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    description: Server Image used for all servers.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  wp_web_server_flavor:
    description: Web Cloud Server flavor
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  # WordPress settings
  domain:
    description: Domain to be used with WordPress site
    type: string
    default: "example.com"

  version:
    description: Version of WordPress to install
    type: string
    default: 4.2.2

  # Database and system user configuration
  prefix:
    description: Prefix to use for
    type: string
    default: wp_

  database_name:
    description: WordPress database name
    type: string
    default: wordpress

  database_server:
    description: IP/Host of the database server
    type: string
    default: 127.0.0.1

  memcached_host:
    description: IP/Host of the memcached server
    type: string
    default: 127.0.0.1

  username:
    description: "Username for system, database, and WordPress logins."
    type: string
    default: wp_user

  database_password:
    description: "Password to use for database connections."
    type: string

  # SSH Keypair naming
  ssh_keypair_name:
    description: "keypair name to register with Nova for the root SSH key"
    type: string

  # Varnish Master backend
  varnish_master_backend:
    description: Master backend host for admin calls in Varnish
    type: string
    default: "localhost"

  wait_condition_handle_secondaries_curl_cli:
    type: string

  mysql_root_password:
    type: string

  kitchen:
    description: URL for the kitchen to use
    type: string
    default: https://github.com/rackspace-orchestration-templates/wordpress-multi

  chef_version:
    description: Version of chef client to use
    type: string
    default: 11.16.2

  # parent stack id for metadata
  parent_stack_id:
    description: Stack id of the parent stack
    type: string
    default: "none"

resources:

  wordpress_secondaries_cloud_init:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        package_update: true
        packages:
          - git
          - mysql-client
        ssh_authorized_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCfteOr6DstoVq3BDDzktO+uT8Vjc/6c/lvUzTHU5ZRqfiHFOznt65LO9IN2Ar2gcBhnCkbNxL+qojyzWE5U7bN5mgPvK2TQIuK05ofKvnRDXx8sfg9IaxxiQbRhSsMF7qyXiI31S3J6fPPTVVbhzd6ONwLOs/DsKdmXcSmVeeH2wO+8C0plKBcYjgMMiTT+hhnRoIsfATNhaWjgBPwO/k2ldZdHsPdq7ltPPUcvxNy2PfDDKW6GC7tJOf56rDeCAyXg1YSyUvZgODRL8cfHTYzYN6BantdPjearRxUD6hRwES8RKMjwPSBJ1puqbM5XJJwZAdCrYCaXwX9f8yDIlCz
        write_files:
        # Set salt-minion to only use local resources
          - path: /etc/salt/minion.d/local.conf
            permissions: '0644'
            content: |
              file_client: local
              mysql.default_file: '/etc/mysql/debian.cnf'
        # Write out Pillar top.sls
          - path: /srv/pillar/top.sls
            permissions: '0600'
            content: |
              base:
                '*':
                  - localhost
        # Write out State top.sls
          - path: /srv/salt/top.sls
            permissions: '0644'
            content: |
              base:
                '*':
                  - salt-minion
                  - apache
                  - memcached
                  - php
                  - varnish
                  - wordpress
                  - users
                  - vsftpd
        # Example Pillar Data using %value% notation
        # See example pillar data from states repository.
          - path: /srv/pillar/localhost.sls
            permissions: '0600'
            content:
              str_replace:
                template: |
                  apache:
                    disable_default_site: True
                    http_port: %http_port%
                    https_port: %https_port%
                    vhosts:
                      - domain: %url%
                        docroot: %destination%/%public%
                  mysql:
                    root_password: %mysql_root_password%
                  mysql-database:
                    name: %db_name%
                  mysql-grant:
                    user:  %wp_user%
                    database: %db_name%
                  mysql-user:
                    user: %wp_user%
                    pass: %database_password%
                  users:
                    %wp_user%:
                      home: %destination%/%public%
                      createhome: True
                      user_dir_mode: 0775
                      prime_group:
                        name: www-data
                  varnish:
                    listen_port: %varnish_port%
                  vsftpd:
                    local_umask: 002
                    additional_configuration:
                      - "ssl_enable=YES"
                      - "ssl_ciphers=HIGH"
                      - "force_local_logins_ssl=NO"
                      - "force_local_data_ssl=NO"
                      - "pasv_min_port=%vsftpd_pasv_min_port%"
                      - "pasv_max_port=%vsftpd_pasv_max_port%"
                  wordpress:
                    domain: %url%
                    user: %wp_user%
                    pass: %database_password%
                    db_host: %db_host%
                    db_name: %db_name%
                    db_user: %wp_user%
                    db_pass: %database_password%
                    group_write: True
                    varnish_master_host: 192.168.168.168
                params:
                  "%http_port%": 8080
                  "%https_port%": 443
                  "%url%": { get_param: domain }
                  "%destination%": "/var/www/vhosts"
                  "%public%": { get_param: domain }
                  "%mysql_root_password%": { get_param: mysql_root_password }
                  "%db_name%": { get_param: database_name }
                  "%db_host%": { get_param: database_server }
                  "%wp_user%": { get_param: username }
                  "%database_password%": { get_param: database_password }
                  "%varnish_port%": 80
                  "%vsftpd_pasv_min_port%": 10050
                  "%vsftpd_pasv_max_port%": 10100
        # Salt Bootstrap script
          - path: /tmp/heat/salt_run.sh
            permissions: '0500'
            content:
              str_replace:
                template: |
                  #!/bin/bash
                  # Install salt-minion using Salt Bootstrap
                  curl -L https://bootstrap.saltstack.com | sudo sh -s --
                  salt-minion --versions
                  # Clone down States
                  mkdir -p /tmp/heat/states
                  git clone https://github.com/rackspace-orchestration-templates/salt-states.git /tmp/heat/states
                  cp -nr /tmp/heat/states/* /srv/salt/
                  # Run local highstate
                  salt-call --local state.highstate
                  # Open and Enable ufw
                  ufw allow %https_port%
                  ufw allow %varnish_port%
                  ufw allow 22
                  ufw allow 21
                  ufw allow proto tcp to any port %vsftpd_pasv_min_port%:%vsftpd_pasv_max_port%
                  ufw --force enable
                  wc_notify --data-binary '{"status": "SUCCESS"}'
                params:
                  wc_notify: { get_param: wait_condition_handle_secondaries_curl_cli }
                  "%https_port%": 443
                  "%varnish_port%": 80
                  "%vsftpd_pasv_min_port%": 10050
                  "%vsftpd_pasv_max_port%": 10100
        runcmd:
          - /tmp/heat/salt_run.sh

  wp_web_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: wp_web_server_hostnames }
      flavor: { get_param: wp_web_server_flavor }
      image: { get_param: image }
      key_name: { get_param: ssh_keypair_name }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      config_drive: "true"
      user_data_format: RAW
      user_data: { get_resource: wordpress_secondaries_cloud_init }

outputs:
  accessIPv4:
    value: { get_attr: [wp_web_server, accessIPv4] }

  privateIPv4:
    value: { get_attr: [wp_web_server, networks, private, 0] }
